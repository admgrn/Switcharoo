#! /usr/bin/python
#
# Copyright 2015 Adam Greenstein <adamgreenstein@comcast.net>
# 
# node_server is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# node_server is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with node_server.  If not, see <http://www.gnu.org/licenses/>.

from multiprocessing.managers import BaseManager
from utils.generator import GraphBuilder
from utils.manager import CacheManager

def create_meta_data():
    global graph
    global meta
    global max_dist
    temp = {}
    maximum = 0
    data = graph[0]
    for i in data:
        distance = int(i['label'])
        temp[i['id']] = distance
        if distance > maximum:
            maximum = distance
    meta = temp
    max_dist = maximum

def get_cache():
    global graph
    return graph

def get_meta_data():
    global meta
    global max_dist
    return (meta, max_dist)

def reload_cache():
    global graph
    temp = gb.get_data()
    print "Reloading Cache..."
    graph = temp
    print "Reloaded"
    print "Creating Meta Data..."
    create_meta_data()
    print "Meta Data Created"


gb = GraphBuilder('./config.ini')
reload_cache()

cache_loader = CacheManager(reload_cache, gb.com_port)
cache_loader.run()
manager = BaseManager(address=('', gb.port), authkey=gb.auth)
manager.register('get_cache', callable=get_cache, exposed=('__getitem__',))
manager.register('get_meta_data', callable=get_meta_data, exposed=('__getitem__',))
print "Launching Server..."
manager.get_server().serve_forever()
